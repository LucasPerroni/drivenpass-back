// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// **If you already have a database structure: npx prisma db pull
// Create new migration: npx prisma migrate dev
// Generate models: npx prisma generate
// Access prisma studio: npx prisma studio

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int           @id @default(autoincrement())
  name        String
  email       String        @unique
  password    String
  Credentials Credentials[]
  SafeNotes   SafeNotes[]
  Cards       Cards[]
  Wifi        Wifi[]

  @@map("users")
}

model Credentials {
  id       Int    @id @default(autoincrement())
  title    String
  url      String
  username String
  password String
  userId   Int
  user     Users  @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("credentials")
}

model SafeNotes {
  id     Int    @id @default(autoincrement())
  title  String @db.VarChar(50)
  text   String @db.VarChar(1000)
  userId Int
  user   Users  @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("safeNotes")
}

model Cards {
  id             Int     @id @default(autoincrement())
  title          String
  number         String
  name           String
  serucityCode   Int
  expirationDate String  @db.VarChar(5)
  password       String
  isVirtual      Boolean
  type           String
  userId         Int
  user           Users   @relation(fields: [userId], references: [id])

  @@unique([userId, title])
  @@map("cards")
}

model Wifi {
  id       Int    @id @default(autoincrement())
  title    String
  name     String
  password String
  userId   Int
  user     Users  @relation(fields: [userId], references: [id])

  @@map("wifi")
}
